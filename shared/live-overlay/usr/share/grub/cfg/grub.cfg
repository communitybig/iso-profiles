insmod font
insmod part_msdos
insmod part_gpt
insmod loadenv
insmod keylayouts

export loaded
export koptsok
export disable_gfxterm
export bootarch
export firmware
export firmware_found
export from
export fromiso
export bootlang
export keyboard
export timezone
export hwclock
export def_bootlang
export def_keyboard
export def_timezone
export menu_color_normal
export menu_color_highlight
export pager

if [ -e ($root)/boot/grub/grubenv ]; then
    load_env ($root)/boot/grub/grubenv
fi

source /boot/grub/functions.cfg
source /boot/grub/defaults.cfg

#No --MORE-- 
pager=0

insmod regexp
insmod datehook
# if ! is_efi; then
#     insmod part_gpt
# fi

# if is_efi; then
#     insmod efi_gop
#     insmod efi_uga
# fi

if [ -z "${loaded}" ]; then
    iscd=""
    auto=""
    regexp -s iscd '^(cd)' "${root}"
    if [ "${iscd}" != "cd" -a -e (cd) ]; then
        probe -s cdp -u cd
        probe -s hdp -u $root
        if [ -n "$cdp" -a "$cdp" = "$hdp" ]; then
            iscd="cd"
        fi
    fi
    if [ "${root}" != "hd96" -a "${iscd}" != "cd" ]; then
        auto="${auto}"
    fi
    source /boot/grub/variable.cfg
    loaded=true

    if [ "${disable_gfxterm}" != "true" ]; then
        if loadfont /boot/grub/unicode.pf2 ; then
            if [ -z "$gfxmode" ] ; then
                gfxmode=1024x768,auto
                gfxpayload=keep
            fi
#             insmod efi_gop
            insmod all_video
#             insmod efi_uga
#             insmod ieee1275_fb
            insmod vbe
            insmod vga
            insmod video_bochs
            insmod video_cirrus
            insmod gfxterm
            if terminal_output --append gfxterm; then
                terminal_output --remove console
            else
                disable_gfxterm=true
            fi
        else
            disable_gfxterm=true
        fi
    fi

    insmod gfxmenu
    insmod jpeg
    insmod png
    theme=($root)/boot/grub/themes/bigcommunity-live/theme.txt
    export theme

    menu_color_normal=cyan/blue
    menu_color_highlight=white/blue

    if [ -n "${iso_path}" ]; then
        auto="img_dev=/dev/disk/by-uuid/${rootuuid} img_loop=${iso_path}"
    fi
    
    export auto
fi

boot_defaults

for kopt in "${clinput}" "${bootlang}" "${keyboard}" "${timezone}" "${hwclock}" "${auto}"; do
    if [ -n "${kopt}" ]; then
        kopts="${kopts} ${kopt}"
    fi
done
if [ -n "${bootlang}${keyboard}${timezone}" ]; then
    koptsok="true"
fi

# Configuração do menu principal
source /boot/grub/menu.cfg

# Configuração do menu advanced
source /boot/grub/advanced.cfg

menuentry "" {
    configfile ($root)/boot/grub/globe.cfg
}

menuentry "Boot existing OS                                                                    B" --class=harddisk --hotkey b {
    set root=(hd0)
    chainloader +1
    boot
}
# if [ -e (hd0,1) ]; then
#     menuentry "Microsoft Windows" --class=windows {
#         insmod ntfs
#         set root=(hd0,1)  # Ajuste para o disco correto
#         chainloader +1
#     }
# fi
# 
# if [ -e (hd0,gpt1) ]; then  # Substitua (hd0,gpt1) pela partição correta
#     menuentry "Microsoft Windows UEFI" --class=windows {
#         insmod part_gpt
#         insmod fat
#         search --no-floppy --set=root --fs-uuid XXXX-XXXX
#         chainloader /EFI/Microsoft/Boot/bootmgfw.efi
#     }
# fi

#source /boot/grub/tools.cfg
menuentry "Tools                                                                               T" --class tools-menu --hotkey t {
    configfile ($root)/boot/grub/tools.cfg
}

menuentry "Shutdown computer                                                                   S" --class=shutdown --hotkey s {
    halt
}
