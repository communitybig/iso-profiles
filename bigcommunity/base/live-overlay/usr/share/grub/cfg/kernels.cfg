menuentry "BigCommunity Live Base" --class=@DIST_NAME@.@ARCH@ --class=bigcommunity {
  echo -e "Please wait, Initializing Operating System..."
  set gfxpayload=keep
  linux /boot/vmlinuz-x86_64 rw \          # Caminho do kernel a ser carregado, com sistema de arquivos montado como leitura e escrita
    quiet \                                # Oculta mensagens detalhadas do boot
    splash \                               # Exibe a tela gráfica de boot
    plymouth.enable=1 \                    # Ativa o Plymouth para animação durante o boot

    # Configurações da mídia live
    misobasedir=bigcommunity \             # Define a pasta base do sistema live
    misolabel=BIGCOMMUNITY_LIVE_BASE \     # Define o rótulo do sistema de arquivos do live ISO

    # Configurações de inicialização e desempenho
    nowatchdog \                           # Desativa watchdog timers para evitar reinicializações inesperadas
    tsc=nowatchdog \                       # Desativa watchdog do Time Stamp Counter (TSC)
    cryptomgr.notests \                    # Desativa testes automáticos de criptografia para acelerar o boot
    no_timer_check \                       # Evita verificações de temporizadores de hardware
    rcupdate.rcu_expedited=1 \             # Acelera operações do Read-Copy Update (RCU) no kernel
    nosoftlockup \                         # Impede detecção de soft lockups (travas temporárias)
    audit=0 \                              # Desativa o sistema de auditoria do Linux, reduzindo o uso da CPU
    nomce \                                # Ignora erros de correção de memória, útil para hardware instável
    skew_tick=1 \                          # Ajusta ticks do processador para economizar energia
    loglevel=3 \                           # Define nível de log para exibir apenas erros e avisos críticos
    systemd.show_status=auto \             # Exibe status do systemd apenas em caso de falha
    rd.udev.log_level=3 \                  # Define o nível de log do udev para exibir apenas mensagens importantes

    # Configurações de energia e CPU
    intel_pstate=active \                  # Ativa o driver de frequência dinâmica da Intel
    amd_pstate=active \                    # Ativa o driver de frequência dinâmica da AMD
    cpuidle.governor=teo \                 # Define o governador de economia de energia "TEO" (Timer Events Oriented)

    # Ajustes de segurança
    apparmor=1 \                           # Ativa o AppArmor para reforçar a segurança do sistema
    security=apparmor \                    # Define o AppArmor como mecanismo de segurança padrão

    # Configuração de ACPI e compatibilidade de hardware
    libata.noacpi=1 \                      # Desativa suporte ACPI para dispositivos ATA
    acpi=force \                           # Força ativação do ACPI mesmo em sistemas antigos
    apm=power-off \                        # Permite desligamento via APM (legacy)
    intremap=off \                         # Desativa Interrupt Remapping, pode evitar problemas em dispositivos PCI
    split_lock_detect=off \                # Desativa detecção de Split Lock para evitar travamentos em CPUs modernas
    clearcpuid=514 \                       # Oculta um recurso da CPU para melhorar compatibilidade de software
    transparent_hugepage=never \           # Desativa Transparent Huge Pages (THP), melhorando performance em alguns casos

    # Suporte a virtualização e IOMMU
    intel_iommu=on \                       # Ativa suporte a IOMMU em processadores Intel
    amd_iommu=on \                         # Ativa suporte a IOMMU em processadores AMD
    tdx=on \                               # Ativa suporte a Intel Trust Domain Extensions (TDX)

    # Suporte a dispositivos NVMe
    nvme_load=yes \                        # Força o carregamento do driver NVMe no boot

    # Configurações gráficas
    nouveau.modeset=1 \                    # Ativa o modo gráfico KMS para placas NVIDIA usando Nouveau
    i915.modeset=1 \                       # Ativa o modo gráfico KMS para GPUs Intel
    amdgpu.modeset=1 \                     # Ativa o modo gráfico KMS para GPUs AMD modernas
    radeon.si_support=0 \                   # Desativa suporte a Southern Islands (SI) no driver Radeon
    radeon.cik_support=0 \                  # Desativa suporte a Sea Islands (CIK) no driver Radeon
    amdgpu.si_support=1 \                   # Ativa suporte a Southern Islands (SI) no driver AMDGPU
    amdgpu.cik_support=1 \                  # Ativa suporte a Sea Islands (CIK) no driver AMDGPU
    nvidia.modeset=1 \                      # Ativa o modo gráfico KMS para GPUs NVIDIA proprietárias
    nvidia_drm.modeset=1 \                  # Ativa o DRM para suporte ao modo gráfico NVIDIA

    # Configurações regionais
    lang=pt_BR \                           # Define o idioma do sistema para português do Brasil
    keytable=br-abnt2 \                    # Define o layout do teclado como brasileiro ABNT2
    tz=America/Sao_Paulo \                 # Define o fuso horário para São Paulo (BRT)
    vconsole.font=Uni2-Fixed16 \           # Define a fonte do terminal para Uni2-Fixed16

    # Configuração extra
    DEEPIN_GFXMODE= \                      # Define modo gráfico Deepin (ainda sem valor especificado)
    module_blacklist=""                    # Lista de módulos a serem bloqueados (ainda vazia)
    initrd /boot/amd_ucode.img /boot/intel_ucode.img /boot/initramfs-@ARCH@.img  # Caminho da imagem initramfs a ser carregada
}

menuentry "Boot existing OS" --class=harddisk {
  set root=(hd0)
  chainloader +1
  boot
}

#menuentry "Microsoft Windows" {
#  insmod ntfs
#  set root=(hd0,1)  # Ajuste para o disco correto
#  chainloader +1
#}

#menuentry "Microsoft Windows UEFI" {
#  insmod part_gpt
#  insmod fat
#  search --no-floppy --set=root --fs-uuid XXXX-XXXX
#  chainloader /EFI/Microsoft/Boot/bootmgfw.efi
#}

function memtest_detect {
  if ! is_efi; then
    if [ -f /boot/memtest ]; then
      menuentry "Run Memory Testing Tool (memtest86+)" --class memtest86 --class gnu --class tool {linux16 /boot/memtest}
    fi
  elif is_efi; then
    menuentry 'UEFI Firmware Settings' --id 'uefi-firmware' --class tool {
      fwsetup
    }

    if [ -f /boot/memtest-efi ]; then
      menuentry "Run Memory Testing Tool EFI (memtest86+)" --class memtest86 --class gnu --class tool {linux16 /boot/memtest-efi}
    fi
  fi
}
